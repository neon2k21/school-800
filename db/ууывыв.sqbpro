<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Roman/Documents/EXPO/School-800/server/db.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="306126"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainsqlite_sequence"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE IF NOT EXISTS classsss (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS group_task (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    date_of_creation TEXT NOT NULL,
    date_of_deadline TEXT NOT NULL,
    point INTEGER NOT NULL,
    status INTEGER NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS groupes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    track INTEGER NOT NULL,
    grp_task INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (track) REFERENCES track(id),
    FOREIGN KEY (grp_task) REFERENCES group_task(id)
);

CREATE TABLE IF NOT EXISTS individual_tasks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    description TEXT NOT NULL,
    date_of_creation TEXT NOT NULL,
    date_of_deadline TEXT NOT NULL,
    point INTEGER NOT NULL,
    status INTEGER NOT NULL DEFAULT 0,
    student INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (student) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS roles (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS track (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fio TEXT NOT NULL,
    login TEXT NOT NULL,
    password TEXT NOT NULL,
    token TEXT NOT NULL,
    avatar TEXT NOT NULL,
    grp INTEGER NOT NULL,
    count_individual_tasks INTEGER NOT NULL DEFAULT 0,
    count_grp_tasks INTEGER NOT NULL DEFAULT 0,
    role INTEGER NOT NULL,
    class INTEGER NOT NULL,
    cout_points INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (role) REFERENCES roles(id),
    FOREIGN KEY (class) REFERENCES classsss(id)
);

CREATE TABLE IF NOT EXISTS portfolio (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user INTEGER NOT NULL,
    name TEXT NOT NULL,
    level INTEGER NOT NULL,
    place INTEGER DEFAULT 0,
    track INTEGER NOT NULL,
    FOREIGN KEY (user) REFERENCES users(id),
    FOREIGN KEY (track) REFERENCES track(id)
);
</sql><current_tab id="0"/></tab_sql></sqlb_project>
